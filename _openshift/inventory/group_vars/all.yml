---
ansible_host: localhost
ansible_connection: local

project_params:
  NAMESPACE: "{{ namespace_name }}"
  IMAGE_NAMESPACE: "{{ image_namespace_name }}"
  DOCKER_REPO_URL: "{{ docker_repo_url }}"
  SERVICE: "{{ service }}"
  APP_NAME: "{{ app_name }}"
  PAM_SCM_URL: "{{ scm_url }}"
  PAM_SCM_REF: "{{ scm_ref }}"
  KIE_CONTAINER: "{{ kie_container if kie_container is defined else 'containerId=com.malware:AnalysisWorkflow:1.0.0-SNAPSHOT' }}"
  BUILDER_IMAGE_NAME: "kie-immutable-builder"

deployment_config_params:
  IMAGE_VERSION: "{{ image_version if image_version is defined else 'latest' }}"

route_params:
  APPS_SUBDOMAIN: "{{ apps_subdomain if apps_subdomain is defined else omit }}"

openshift_cluster_content:
  - galaxy_requirements:
      - "{{ playbook_dir }}/roles/requirements.yml"
  - object: Create Application Resources
    pre_steps:
    - role: openshift_cluster_login
      vars:
        ocp_token: "{{ ocp_token }}"
        ocp_url: "{{ ocp_url }}"
    content:
      # Setup S2I builder image
      # - name: Create builder image imagestream
      #   template: "{{ playbook_dir }}/builder-img/builderImageStream.yaml"
      #   params_from_vars: "{{ project_params }}"
      #   namespace: "{{ project_params.NAMESPACE }}"
      #   tags:
      #     - create-builder-image

      - name: Create builder BuildConfig
        template: "{{ playbook_dir }}/builder-img/builderImageBuild.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - create-builder-image
      - name: Builder image build config
        template: "{{ playbook_dir }}/buildConfig.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - create-build-config

      # - name: Start build and wait for it to finish
      #   shell: oc logs -f `oc start-build kie-immutable-builder | awk '{ print $1 }'`
      #   tags:
      #     - create-build-config

      - name: Create TLS certificate
        template: "{{ playbook_dir }}/tlsCertificate.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - deploy

      - name: Create standalone config map
        template: "{{ playbook_dir }}/standaloneConfig.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - deploy

          
      - name: Create service accounts
        template: "{{ playbook_dir }}/serviceAccount.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - deploy

      - name: Create KIE admin user secret
        template: "{{ playbook_dir }}/kieAdminCredentials.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - deploy
          
          
      - name: Deployment Config
        template: "{{ playbook_dir }}/deploymentConfig.yaml"
        params_from_vars: "{{ project_params | combine(deployment_config_params) }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - deploy
      - name: Service
        template: "{{ playbook_dir }}/service.yaml"
        params_from_vars: "{{ project_params }}"
        namespace: "{{ project_params.NAMESPACE }}"
        tags:
          - deploy
      - name: Route
        template: "{{ playbook_dir }}/route.yaml"
        namespace: "{{ project_params.NAMESPACE }}"
        params_from_vars: "{{ project_params | combine(route_params) }}"
        tags:
          - deploy
